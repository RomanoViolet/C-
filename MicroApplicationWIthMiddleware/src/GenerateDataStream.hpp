#ifndef GENERATEDATASTREAM_HPP_
#define GENERATEDATASTREAM_HPP_

#include "CustomMemoryManagement.hpp"
#include <Builder.hpp>
#include <sstream>
#include <TypeA.hpp>
#include <TypeB.hpp>
#include <TypeC.hpp>
#include <TypeD.hpp>
#include <TypeE.hpp>
#include <MemoryBounds.hpp>

class GenerateDataStream {
public:
  GenerateDataStream()
      : outputStream_1(TypeA()), outputStream_2(TypeB()),
        outputStream_3(TypeC()), 
        customPlacementNew(CustomMemoryManagement(nullptr)),
        allOutputInterface(AggregateInterfaces()){};

  // outputStream_x allows the customer to read data generated by this class
  TypeA outputStream_1;
  TypeB outputStream_2;
  TypeC outputStream_3;

  void initialize();
  void compute();
  void filter();
  void* getAllocatedMemoryAddress() const;
  MemoryBounds getAddressOfAggregateInterface() const;
  
private:
  alignas(64) uint8_t allocatedMemory[1000];
  CustomMemoryManagement customPlacementNew;
  AggregateInterfaces allOutputInterface;
  double seedOutputStream_1 = -5;
  double seedOutputStream_2 = 0U;
  unsigned seedOutputStream_3 = 1U;
  char seedLetter = 'A';
  
};
//#include "GenerateDataStream.inl"
#endif